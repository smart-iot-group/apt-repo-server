on:
  push:
    branches:
      - main

permissions: write-all

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: ${{ github.event.repository.full_name }}

      # Create a release artifact
      - uses: actions/checkout@v2
        if: ${{ steps.release.outputs.release_created }}

      - uses: docker/setup-buildx-action@v2
        if: ${{ steps.release.outputs.release_created }}

      - run: docker build -f Dockerfile.production -t ghcr.io/${{ github.event.repository.full_name }}:${{ steps.release.outputs.tag_name }} -t ghcr.io/${{ github.event.repository.full_name }}:latest .
        if: ${{ steps.release.outputs.release_created }}

      - run: docker save -o ${{ github.event.repository.name }}-${{ steps.release.outputs.tag_name }}.tar ghcr.io/${{ github.event.repository.full_name }}:${{ steps.release.outputs.tag_name }}
        if: ${{ steps.release.outputs.release_created }}

      - run: gh release upload ${{ steps.release.outputs.tag_name }} ./${{ github.event.repository.name }}-${{ steps.release.outputs.tag_name }}.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}

      # Push tags to docker registry
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}

      - run: docker push ghcr.io/${{ github.event.repository.full_name }} --all-tags
        if: ${{ steps.release.outputs.release_created }}
